{
  "info": {
    "name": "LightRAG API",
    "_postman_id": "a4ad3ad0-0000-4c00-9000-light-rag-api",
    "description": "Postman коллекция для тестирования LightRAG FastAPI сервера.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": { "major": 1, "minor": 0, "patch": 0 }
  },
  "variable": [
    { "key": "base_url", "value": "http://localhost:8000" }
  ],
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": { "raw": "{{base_url}}/health", "host": ["{{base_url}}"], "path": ["health"] }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
            "script": {
              "exec": [
                "pm.test('Статус 200', () => pm.response.code === 200);",
                "pm.test('Поле status ok/healthy', () => { const json = pm.response.json(); pm.expect(['ok','healthy']).to.include(json.status); });"
              ],
              "type": "text/javascript"
            }
        }
      ]
    },
    {
      "name": "Chat: Ask Question",
      "request": {
        "method": "POST",
        "header": [ { "key": "Content-Type", "value": "application/json" } ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"How do I create a Pydantic AI agent?\",\n  \"conversation_id\": null,\n  \"user_id\": \"test-user\"\n}"
        },
        "url": { "raw": "{{base_url}}/chat", "host": ["{{base_url}}"], "path": ["chat"] }
      },
      "response": [],
      "event": [
        { "listen": "test", "script": { "exec": [
          "pm.test('Status 200', () => pm.response.code === 200);",
          "const data = pm.response.json();",
          "pm.test('Есть ответ', () => pm.expect(data.response).to.be.a('string'));"
        ], "type": "text/javascript" } }
      ]
    },
    {
      "name": "Documents: Insert Document",
      "request": {
        "method": "POST",
        "header": [ { "key": "Content-Type", "value": "application/x-www-form-urlencoded" } ],
        "body": {
          "mode": "urlencoded",
          "urlencoded": [
            { "key": "content", "value": "Sample inline document content about Pydantic tools.", "type": "text" },
            { "key": "document_id", "value": "doc_sample_inline", "type": "text" }
          ]
        },
        "url": { "raw": "{{base_url}}/documents/insert", "host": ["{{base_url}}"], "path": ["documents","insert"] }
      },
      "response": []
    },
    {
      "name": "Documents: Search",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/documents/search?query=How%20do%20I%20create%20a%20Pydantic%20AI%20agent?&limit=3",
          "host": ["{{base_url}}"],
          "path": ["documents","search"],
          "query": [
            { "key": "query", "value": "How do I create a Pydantic AI agent?" },
            { "key": "limit", "value": "3" }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Config: Get Current Config",
      "request": {
        "method": "GET",
        "header": [],
        "url": { "raw": "{{base_url}}/config", "host": ["{{base_url}}"], "path": ["config"] }
      },
      "response": []
    },
    {
      "name": "Config: Update (Working Dir / Prompt)",
      "request": {
        "method": "POST",
        "header": [ { "key": "Content-Type", "value": "application/json" } ],
        "body": { "mode": "raw", "raw": "{\n  \"working_dir\": \"./pydantic-docs\",\n  \"system_prompt\": \"You are a concise assistant.\"\n}" },
        "url": { "raw": "{{base_url}}/config", "host": ["{{base_url}}"], "path": ["config"] }
      },
      "response": []
    }
  ]
}
